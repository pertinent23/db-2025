-- Active: 1744294970495@@127.0.0.1@3306@group05
### CREATION DE LA BASE DE DONNEES

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
START TRANSACTION;
SET time_zone = "+00:00";

CREATE DATABASE IF NOT EXISTS group05;

USE group05;

### CREATION DES TABLES 

CREATE TABLE AGENCE (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    NOM VARCHAR(255) NOT NULL UNIQUE,
    URL VARCHAR(255) NOT NULL,
    FUSEAU_HORAIRE VARCHAR(50) NOT NULL,
    TELEPHONE VARCHAR(50) NOT NULL,
    SIEGE VARCHAR(255) NOT NULL
);

CREATE TABLE LANGUEPRINCIPALE (
    AGENCE_ID INT,
    LANGUE VARCHAR(20),
    FOREIGN KEY (AGENCE_ID) REFERENCES AGENCE(ID) ON DELETE CASCADE
);

CREATE TABLE ITINERAIRE (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    AGENCE_ID INT,
    TYPE VARCHAR(50),
    NOM VARCHAR(255),
    FOREIGN KEY (AGENCE_ID) REFERENCES AGENCE(ID) ON DELETE SET NULL
);

CREATE TABLE ARRET (
    ID INT PRIMARY KEY,
    NOM VARCHAR(255),
    LATITUDE DOUBLE,
    LONGITUDE DOUBLE
    -- Contrainte de validation des coordonnées (à faire via application PHP)
);

CREATE TABLE SERVICE (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    NOM VARCHAR(255),
    LUNDI BOOLEAN,
    MARDI BOOLEAN,
    MERCREDI BOOLEAN,
    JEUDI BOOLEAN,
    VENDREDI BOOLEAN,
    SAMEDI BOOLEAN,
    DIMANCHE BOOLEAN,
    DATE_DEBUT DATE,
    DATE_FIN DATE,
    CONSTRAINT CHECK_DATE_SERVICE CHECK (DATE_DEBUT <= DATE_FIN)
);

CREATE TABLE TRAJET (
    TRAJET_ID VARCHAR(255) NOT NULL PRIMARY KEY,
    SERVICE_ID INT,
    ITINERAIRE_ID INT,
    DIRECTION INT,
    FOREIGN KEY (SERVICE_ID) REFERENCES SERVICE(ID) ON DELETE CASCADE,
    FOREIGN KEY (ITINERAIRE_ID) REFERENCES ITINERAIRE(ID) ON DELETE CASCADE
);

CREATE TABLE ARRET_DESSERVI (
    ITINERAIRE_ID INT,
    ARRET_ID INT,
    SEQUENCE INT,
    PRIMARY KEY (ITINERAIRE_ID, ARRET_ID),
    FOREIGN KEY (ITINERAIRE_ID) REFERENCES ITINERAIRE(ID) ON DELETE CASCADE,
    FOREIGN KEY (ARRET_ID) REFERENCES ARRET(ID) ON DELETE CASCADE
);

CREATE TABLE HORRAIRE (
    TRAJET_ID VARCHAR(255),
    ITINERAIRE_ID INT,
    ARRET_ID INT,
    HEURE_ARRIVEE TIME DEFAULT NULL,
    HEURE_DEPART TIME DEFAULT NULL,
    PRIMARY KEY (TRAJET_ID, ARRET_ID),
    FOREIGN KEY (TRAJET_ID) REFERENCES TRAJET(TRAJET_ID) ON DELETE CASCADE,
    FOREIGN KEY (ITINERAIRE_ID) REFERENCES ITINERAIRE(ID) ON DELETE CASCADE,
    FOREIGN KEY (ARRET_ID) REFERENCES ARRET(ID) ON DELETE CASCADE
);

CREATE TABLE EXCEPTION (
    SERVICE_ID INT,
    DATE DATE,
    CODE ENUM(1, 2) DEFAULT 1,
    PRIMARY KEY (SERVICE_ID, DATE),
    FOREIGN KEY (SERVICE_ID) REFERENCES SERVICE(ID) ON DELETE CASCADE
);
### FIN DE LA CR2ATION DES TABLES...


### CHARGEMENT DES TABLES...

LOAD DATA INFILE '/docker-entrypoint-initdb.d/AGENCE.CSV' 
INTO TABLE `AGENCE`
FIELDS TERMINATED BY ',' ENCLOSED BY '"' IGNORE 1 ROWS;

LOAD DATA INFILE '/docker-entrypoint-initdb.d/LANGUEPRINCIPALE.CSV' 
INTO TABLE `LANGUEPRINCIPALE`
FIELDS TERMINATED BY ',' ENCLOSED BY '"' IGNORE 1 ROWS;

LOAD DATA INFILE '/docker-entrypoint-initdb.d/ITINERAIRE.CSV' 
INTO TABLE `ITINERAIRE`
FIELDS TERMINATED BY ',' ENCLOSED BY '"' IGNORE 1 ROWS;

LOAD DATA INFILE '/docker-entrypoint-initdb.d/ARRET.CSV' 
INTO TABLE `ARRET`
FIELDS TERMINATED BY ',' ENCLOSED BY '"' IGNORE 1 ROWS;

LOAD DATA INFILE '/docker-entrypoint-initdb.d/SERVICE.CSV' 
INTO TABLE `SERVICE`
FIELDS TERMINATED BY ',' ENCLOSED BY '"' IGNORE 1 ROWS;

LOAD DATA INFILE '/docker-entrypoint-initdb.d/TRAJET.CSV' 
INTO TABLE `TRAJET`
FIELDS TERMINATED BY ',' ENCLOSED BY '"' IGNORE 1 ROWS;

LOAD DATA INFILE '/docker-entrypoint-initdb.d/ARRET_DESSERVI.CSV' 
INTO TABLE `ARRET_DESSERVI`
FIELDS TERMINATED BY ',' ENCLOSED BY '"' IGNORE 1 ROWS;

LOAD DATA INFILE '/docker-entrypoint-initdb.d/HORRAIRE.CSV' 
INTO TABLE `HORRAIRE`
FIELDS TERMINATED BY ',' ENCLOSED BY '"' IGNORE 1 ROWS;

LOAD DATA INFILE '/docker-entrypoint-initdb.d/EXCEPTION.CSV' 
INTO TABLE `EXCEPTION`
FIELDS TERMINATED BY ',' ENCLOSED BY '"' IGNORE 1 ROWS;

### FIN DU CHARMENT DES DONNEES




### FONCTION POUR LA MISE A JOUR AUTOMATIQUE DES NUMERO D'EPISODE

### FIN DE LA FONCTION


CREATE OR REPLACE VIEW DATES_SERVICE AS
WITH RECURSIVE dates_rec (service_id, nom, date_actuelle, date_fin, lundi, mardi, mercredi, jeudi, vendredi, samedi, dimanche) AS (
    SELECT s.ID, s.NOM, s.DATE_DEBUT, s.DATE_FIN,
           s.LUNDI, s.MARDI, s.MERCREDI, s.JEUDI, s.VENDREDI, s.SAMEDI, s.DIMANCHE
    FROM SERVICE s

    UNION ALL

    SELECT d.service_id, d.nom, DATE_ADD(d.date_actuelle, INTERVAL 1 DAY), d.date_fin,
           d.lundi, d.mardi, d.mercredi, d.jeudi, d.vendredi, d.samedi, d.dimanche
    FROM dates_rec d
    WHERE d.date_actuelle < d.date_fin
)
SELECT service_id, nom, date_actuelle as date
FROM dates_rec
WHERE (
    (lundi = 1 AND DAYOFWEEK(date_actuelle) = 2) OR
    (mardi = 1 AND DAYOFWEEK(date_actuelle) = 3) OR
    (mercredi = 1 AND DAYOFWEEK(date_actuelle) = 4) OR
    (jeudi = 1 AND DAYOFWEEK(date_actuelle) = 5) OR
    (vendredi = 1 AND DAYOFWEEK(date_actuelle) = 6) OR
    (samedi = 1 AND DAYOFWEEK(date_actuelle) = 7) OR
    (dimanche = 1 AND DAYOFWEEK(date_actuelle) = 1)
);


CREATE OR REPLACE VIEW DATES_SERVICE_AVEC_EXCEPTIONS AS
(
    SELECT ds.service_id, ds.nom, e.DATE as date
    FROM DATES_SERVICE ds
    JOIN EXCEPTION e 
    ON ds.service_id = e.SERVICE_ID AND ds.date = e.DATE AND e.CODE = 1

    UNION

    SELECT ds.service_id, ds.nom, ds.date
    FROM DATES_SERVICE ds
    LEFT JOIN EXCEPTION e
    ON ds.service_id = e.SERVICE_ID AND ds.date = e.DATE
    WHERE e.CODE is NULL
);



### CREATATION DES VUES

#CREATE VIEW NON_ENDED_SERIES AS
#SELECT * FROM SERIES WHERE CHAMPION_ID IS NULL;

### FIN DE LA CREATION DES VUES